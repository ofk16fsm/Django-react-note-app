{"version":3,"sources":["components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["ModalForm","props","handleChange","e","name","target","value","activeItem","state","notesides","id","setState","date","description","this","modal","setModal","saveNote","Modal","isOpen","toggle","ModalHeader","ModalBody","Form","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","type","placeholder","onChange","ModalFooter","Button","color","onClick","Component","App","readApi","fetch","then","response","json","data","console","log","catch","err","error","increaseIndex","next","index","addNote","notes","note","push","handleApi","item","method","credentials","headers","body","JSON","stringify","sortNote","sides","sort","a","b","visible","toggleList","nextNote","nextClick","noteNext","browse","previousNote","previous","previousClick","notePrevious","getModulo","n","m","rotation","sidenum","indexOf","length","noteItem","deleteFromApi","deleteNote","editFromApi","handleSubmit","handleClick","bind","className","Container","Card","CardHeader","CardBody","readOnly","ListGroup","map","ListGroupItem","key","Provider","close","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.44b336ec.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText} from 'reactstrap';\r\n\r\nclass ModalForm extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tactiveItem: {\r\n\t\t\t\tdate: '',\r\n\t\t\t\tdescription: '',\r\n\t\t\t},\r\n\t\t\tnotesides: this.props.notesides\r\n\t\t};\r\n\t}\r\n\t/*\r\n\tonChange = (e) => {\r\n\t\tlet name = e.target.name;\r\n\t\tlet value = e.target.value;\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\t*/\r\n\t/*\r\n\thandleChange = (e) => {\r\n\t\tlet name = e.target.name;\r\n\t\tlet value = e.target.value;\r\n\t\tthis.setState(state => ({\r\n\t\t\tactiveItem: {\r\n\t\t\t...state.activeItem, [name]:value}\r\n\t\t}));\r\n\t}\r\n\t*/\r\n\thandleChange = (e) => {        \r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n\t\t\r\n        const activeItem = {...this.state.activeItem, [name]: value};\r\n\t\tconst notesides = this.props.notesides;\r\n\t\tnotesides[this.id] = activeItem;\r\n\t\tthis.setState({activeItem,\r\n\t\t\tnotesides: this.props.notesides});\r\n\t\t\r\n    }\r\n\t\r\n\trender(){\r\n\t\tconst {modal, setModal} = this.props;\r\n\t\tconst toggle = () => setModal(!modal);\r\n\t\tconst {saveNote} = this.props;\r\n\t\tconst {id} = this.props;\r\n\t\tconst {notesides} = this.props;\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<Modal isOpen={modal} toggle={toggle}>\r\n\t\t\t<ModalHeader> Note Item {\"#\"+id} </ModalHeader>\r\n\t\t\t<ModalBody>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<InputGroup>\r\n\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\r\n\t\t\t\t\t\t<InputGroupText>Date:</InputGroupText>\r\n\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"date\" placeholder=\"YY-MM-DD\" onChange={this.handleChange}/>\r\n\t\t\t\t\t\t<InputGroupAddon addonType=\"prepend\">\r\n\t\t\t\t\t\t<InputGroupText>Text:</InputGroupText>\r\n\t\t\t\t\t\t</InputGroupAddon>\r\n\t\t\t\t\t\t\t<Input type=\"text\" name=\"description\" placeholder=\"Enter your text\" onChange={this.handleChange}/>\r\n\t\t\t\t\t\t</InputGroup>\t\t\t\t\t\t\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</Form>\r\n\t\t\t</ModalBody>\r\n\t\t\t<ModalFooter>\r\n\t\t\t\t<Button color=\"success\" onClick={(activeItem) => saveNote(notesides[id])}>Save</Button>\r\n\t\t\t</ModalFooter>\r\n\t\t</Modal>\r\n\t\t</div>\r\n\t\t);\t\t\r\n\t}\r\n}\r\n\r\nexport default ModalForm;","import React, {Component} from 'react';\nimport {Container, Button, Card, CardHeader, CardBody, Form, FormGroup, Input, InputGroup, InputGroupAddon, InputGroupText, ListGroup, ListGroupItem,\n Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\nimport {IconContext} from 'react-icons';\nimport {FiEdit, FiTrash2} from 'react-icons/fi';\nimport ModalForm from './components/Modal';\n/*\nconst ModalExample = (props) => {\n\n  const {modal, setModal} = props;\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Modal title</ModalHeader>\n        <ModalBody>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={toggle}>Do Something</Button>{' '}\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n*/\n/*\nconst Div = (props) => (\n    <div {...props}></div>\n);\n\n/*\nconst noteItems = [\n\t{\n\t\tid: 0,\n\t\tdate: \"2018-02-17\",\n\t\tdescription: \"Hello world\"\n\t},\n\t{\n\t\tid: 1,\n\t\tdate: \"2015-04-19\",\n\t\tdescription: \"Hello JavaScript\"\n\t},\n];\n*/\nclass App extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tindex: 0,\n\t\t\tactiveItem: {\n\t\t\t\tdate: '',\n\t\t\t\tdescription: '',\n\t\t\t},\n\t\t\tnote: '',\n            notesides: [],\n            visible: false,\n\t\t\tmodal: false,\n            nextClick: -1,\n            previousClick: 0,\n        };\n\t\t this.onChange = this.onChange.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.readApi();\n\t}\n\t\n\tonChange = (e) => {        \n        let name = e.target.name;\n        let value = e.target.value;\n\t\t\n        const activeItem = {...this.state.activeItem, [name]: value};\n\t\tthis.setState({activeItem});\n    }\n\t\n\treadApi = () => {\n\t\tfetch('http://127.0.0.1:8000/api/notes/')\n\t\t.then(response => response.json())\n\t\t.then(data => {\n\t\t\tconsole.log('Successful');\n\t\t\tthis.setState({notesides: data})})\n\t\t.catch(err => console.error('Error: ', err));\n\t}\n\t\n\tincreaseIndex = () => {\n       let next = this.state.index;\t   \n       this.setState({\n\t\t\tindex: next\n       });\n\t   return next;\n    }\n\t\n\taddNote = () => {\n        let notes = this.state.notesides;\n\t\t//let index = notes[notes.length -1].id + this.increaseIndex();\n\t\t//console.log(index);\n\t\tlet date = this.state.activeItem.date;\n\t\tlet description = this.state.activeItem.description;\n        let note = this.state.activeItem;\n\t\tconsole.log(this.state.activeItem.description);\n        note = {\n\t\t\t\tdate: date,\n\t\t\t\tdescription: description\n\t\t};\n\t\t\n        /*\n        if(note.date == \"\" || note.text == \"\"){\n            alert(\"Date & text must be filled out\");\n            return false;\n        }*/\n        notes.push(note);\n        this.setState({\n            notesides: notes,\n        });\n\t\tthis.handleApi(note);\n    }\n\t\n\thandleApi = (item) => {\n\t\tfetch('http://127.0.0.1:8000/api/notes/', {\n\t\t  method: 'POST', // or 'PUT'\n\t\t  credentials: 'same-origin',\n\t\t  headers: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-Type': 'application/json',\n\t\t  },\n\t\t  body: JSON.stringify(item),\n\t\t}).then((response) => {\n\t\t\treturn response.json()\n\t\t}).then(data => {\n\t\t  this.readApi();\n\t\t  console.log('Success:', data);\n\t\t}).catch((error) => {\n\t\t  console.error('Error:', error);\n\t\t});\t\t\n\t}\n\t\n\tsortNote = () => {\n        let sides = this.state.notesides;\n        this.setState({\n            notesides: sides.sort((a, b) => (a.date > b.date) ? 1 : -1),\n            visible: true\n        });\n    }\n\t\n\ttoggleList = () => {\n        this.setState({visible: !this.state.visible});\n    }\n\t\n\tsetModal = () => {\n\t\tthis.setState({modal: !this.state.modal});\n\t}\n\t\n\tnextNote = () => {\n       let next = this.state.nextClick + 1;\n       let noteNext = `${this.browse(next)}`;\n       this.setState({\n            note: noteNext,\n\t\t\tnextClick: next\n       });\n    }\n    \n    previousNote = () => {\n\t\tlet previous = this.state.previousClick - 1;\n        let notePrevious = `${this.browse(previous)}`;\n        this.setState({\n            note: notePrevious,\n\t\t\tpreviousClick: previous\n        });\n    }\n    \n    getModulo = (n, m) => {\n        return ((n % m) + m) % m;\n    }\n    \n    browse = (rotation) =>{\n        let sides = this.state.notesides;\n        let sidenum = sides.indexOf(sides[0]);\n        try{\n            if(sidenum < sides.length){\n                sidenum += rotation;\n            }\n            else{\n                sidenum = 0;\n            }\n            let noteItem = this.state.activeItem;\n\t\t\tnoteItem = sides[this.getModulo(sidenum, sides.length)];\n\t\t\tconsole.log(noteItem);\n\t\t\tlet note = this.state.note;\n\t\t\tnote = `${noteItem.date}: ${noteItem.description}`;\n\t\t\tthis.setState({\n\t\t\t\tnote: note,\n\t\t\t\tactiveItem: noteItem\n\t\t\t});\n            return note;\t\t\t\n        }\n        catch(err){\n            console.log(err);\n        }\n    }\n\t\n\tdeleteFromApi = (note) => {\n\t\t// eslint-disable-next-line\n\t\tfetch('http://127.0.0.1:8000/api/notes/' + `${note.id}`, {\n\t\t\tmethod: 'DELETE',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t}\n\t\t}).then((data) => {\n\t\t\tconsole.log('Removed:', data);\n\t\t\tthis.readApi();\n\t\t}).catch((error) => {\n\t\t\tconsole.error('Error:', error);\n\t\t});\n\t}\n\t\n\tdeleteNote = () => {\n        let notes = this.state.notesides;\n        let index = notes.indexOf(this.state.activeItem);\n        //console.log(notes[index].id);\n        if(index !== -1){\n            this.deleteFromApi(notes[index]);\n\t\t\t//notes.splice(index, 1);\n        }\n        this.setState({\n            notesides: notes\n        });\n        console.log(this.state.activeItem);    \n    }\n\t\n\teditFromApi = (id) => {\n\t\t// eslint-disable-next-line\n\t\tfetch('http://127.0.0.1:8000/api/notes/' + `${id}`, {\n\t\t\tmethod: 'HEAD',\n\t\t\tcredentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t}\n\t\t}).then((data) => {\n\t\t\t//return data;\n\t\t\tconsole.log('Edited:', data);\n\t\t\tthis.readApi();\n\t\t}).catch((error) => {\n\t\t\tconsole.error('Error:', error);\n\t\t});\n\t\tconsole.log(\"Save\"+JSON.stringify(this.state.notesides[id]));\n\t}\n\t\n\thandleSubmit = item => {\n\t\tthis.editFromApi(item);\n        this.setModal();\n        console.log(\"save\" + JSON.stringify(item));\n    };\n\t\n\thandleClick = (id) => {\n\t\tconsole.log('This is: ', id);\n\t\tthis.setState({\n\t\t\tindex: id\n\t\t});\n\t\tthis.setModal();\n\t}\n\t\n\trender(){\n\t\treturn (\n\t\t\t<main className=\"content\">\n\t\t\t<h1 className=\"text-navy text-uppercase text-center my-4\">Note app</h1>\n\t\t\t<Container>\n\t\t\t<Card>\n\t\t\t\t<CardHeader className=\"btn-group\">                \n\t\t\t\t\t<Button color=\"info\" onClick={this.addNote}>Add</Button>\t\t\t\t\t\n                    <Button color=\"info\" onClick={this.previousNote}>Previous</Button>\n                    <Button color=\"info\" onClick={this.nextNote}>Next</Button>\n                </CardHeader>\n\t\t\t\t<CardHeader className=\"btn-group\">\n\t\t\t\t\t<Button color=\"info\" onClick={this.toggleList}>Toggle</Button>\n                    <Button color=\"info\" onClick={this.sortNote}>Sort</Button>\n                    <Button color=\"info\" >Save</Button>\n\t\t\t\t</CardHeader>            \n\t\t\t\n\t\t\t\t<CardBody>\n                <Form>\n\t\t\t\t<FormGroup>\n                <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>Date:</InputGroupText>\n                </InputGroupAddon>\n\t\t\t\t\t<Input type=\"text\" name=\"date\" placeholder=\"YYYY-MM-DD\" onChange={this.onChange}/>\n                <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>Text:</InputGroupText>\n                </InputGroupAddon>\n\t\t\t\t\t<Input type=\"text\" name=\"description\" placeholder=\"Enter your text\" onChange={this.onChange}/>\n               </InputGroup>               \n\n                <br/>\n\t\t\t\t<Input type=\"textarea\" name=\"text\" placeholder=\"You will read your note here\" value={this.state.note} readOnly onChange={this.browse}/>\n                <br/>\n\t\t\t\t{this.state.visible ? (\n\t\t\t\t<ListGroup>                    \n\t\t\t\t\t{this.state.notesides.map((note, index) => (\n\t\t\t\t\t\t<ListGroupItem key={note.id}>\n\t\t\t\t\t\t\t{note.date}: {note.description}\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<IconContext.Provider value={{color:\"red\"}}>\n\t\t\t\t\t\t\t\t\t<Button close onClick={(id) => this.deleteFromApi(note)}><FiTrash2/></Button>\n\t\t\t\t\t\t\t\t</IconContext.Provider>\n\t\t\t\t\t\t\t\t<IconContext.Provider value={{color:\"grey\"}}>\n\t\t\t\t\t\t\t\t\t<Button close onClick={(index) => this.handleClick(note.id)}><FiEdit/></Button>\n\t\t\t\t\t\t\t\t</IconContext.Provider>\n\t\t\t\t\t\t</ListGroupItem>)\n\t\t\t\t\t)}                   \n                </ListGroup>) : null}\n\t\t\t\t</FormGroup>\n                </Form>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t\t<ModalForm\n\t\t\tid={this.state.index}\n\t\t\tnotesides={this.state.notesides}\n\t\t\tmodal={this.state.modal}\n\t\t\tsetModal={this.setModal}\n\t\t\tsaveNote={(note) => this.editFromApi(this.state.index)}/>\n            </Container>\t\t\t\n\t\t\t</main>\n\t\t);\n\t}\n}\t\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}